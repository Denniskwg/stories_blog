{"ast":null,"code":"import { createContext } from \"react\";\nimport { initialAuthState } from \"./auth-state\";\nconst stub = () => {\n  throw new Error(\"You forgot to wrap your component in <AuthProvider>.\");\n};\nconst initialContext = {\n  ...initialAuthState,\n  createUser: stub,\n  login: stub,\n  refreshToken: stub,\n  getClient: stub\n};\nconst AuthContext = /*#__PURE__*/createContext(initialContext);\nexport default AuthContext;","map":{"version":3,"names":["createContext","initialAuthState","stub","Error","initialContext","createUser","login","refreshToken","getClient","AuthContext"],"sources":["/home/dkamau476/world_stories/src/authentication/auth-context.tsx"],"sourcesContent":["import { createContext } from \"react\";\nimport { AuthState, initialAuthState, User } from \"./auth-state\";\nimport { AxiosInstance, AxiosResponse } from \"axios\";\n\nexport interface AuthContextInterface<TUser extends User = User>\n  extends AuthState<TUser> {\n    createUser: (\n      username: string,\n      password: string,\n      firstName: string,\n      lastName: string,\n      email: string\n    ) => void;\n    login: (username: string, password: string) => Promise<AxiosResponse<any>>;\n    refreshToken: () => Promise<AxiosResponse<any>>;\n    getClient: () => AxiosInstance;\n}\n\nconst stub = (): never => {\n  throw new Error(\"You forgot to wrap your component in <AuthProvider>.\");\n};\n\nconst initialContext = {\n  ...initialAuthState,\n  createUser: stub,\n  login: stub,\n  refreshToken: stub,\n  getClient: stub,\n};\n\nconst AuthContext = createContext<AuthContextInterface>(initialContext);\n\nexport default AuthContext;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAAoBC,gBAAgB,QAAc,cAAc;AAiBhE,MAAMC,IAAI,GAAGA,CAAA,KAAa;EACxB,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;AACzE,CAAC;AAED,MAAMC,cAAc,GAAG;EACrB,GAAGH,gBAAgB;EACnBI,UAAU,EAAEH,IAAI;EAChBI,KAAK,EAAEJ,IAAI;EACXK,YAAY,EAAEL,IAAI;EAClBM,SAAS,EAAEN;AACb,CAAC;AAED,MAAMO,WAAW,gBAAGT,aAAa,CAAuBI,cAAc,CAAC;AAEvE,eAAeK,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}