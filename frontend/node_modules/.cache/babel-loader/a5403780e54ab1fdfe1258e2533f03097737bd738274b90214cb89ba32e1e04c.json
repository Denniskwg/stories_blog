{"ast":null,"code":"var _jsxFileName = \"/home/dkamau476/world_stories/src/authentication/auth-provider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useCallback, useContext, useMemo, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthContext from \"./auth-context\";\nimport { reducer } from \"./reducer\";\nimport { initialAuthState } from \"./auth-state\";\nimport axios from \"axios\";\nimport { TOKEN_LOCALSTORAGE_KEY } from \"./auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet refreshPromise = null;\nexport const AuthProvider = opts => {\n  _s();\n  const {\n    children\n  } = opts;\n  const HOST_URL = process.env.REACT_APP_API_HOST_URL || \"http://localhost:8000/\";\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID || \"xwYKg1b4eazi2OPlObUOzBvZaqoQ7z866Bcd2dVx\";\n  const CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET || \"fa8K70L2nPaiUFQo47xp9xJRwVbq8Pg1yqZXXCRHo5I3wLG0B95NBLIwzXzPtkkIOvDyz9hpF3Ip8ZA6YeDigOMMmzuS5VArLyGN6SOfBXaPmcaqPA0mrKh1d4lO7hIR\";\n  const [state, dispatch] = useReducer(reducer, initialAuthState);\n  const navigate = useNavigate();\n  const refreshToken = useCallback(() => {\n    const local = localStorage.getItem(TOKEN_LOCALSTORAGE_KEY);\n    return new Promise((resolve, reject) => {\n      if (local === null) {\n        reject(\"already refreshing or localstorage token not found\");\n        return;\n      }\n      const token = JSON.parse(local);\n      const url = HOST_URL + \"o/token/\";\n      const request = axios.post(url, new URLSearchParams({\n        refresh_token: token.refresh_token,\n        grant_type: \"refresh_token\",\n        client_id: CLIENT_ID,\n        client_secret: CLIENT_SECRET\n      }), {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n      request.then(res => {\n        const token = JSON.stringify(res.data);\n        localStorage.setItem(TOKEN_LOCALSTORAGE_KEY, token);\n        resolve(res);\n      }).catch(err => {\n        navigate(\"/login\", {\n          replace: true\n        });\n        reject(err);\n      });\n    });\n  }, [CLIENT_ID, CLIENT_SECRET, HOST_URL, navigate]);\n  const getClient = useCallback(() => {\n    const newInstance = axios.create();\n    newInstance.interceptors.request.use(config => {\n      var _config$url;\n      const local = localStorage.getItem(TOKEN_LOCALSTORAGE_KEY);\n      if (!((_config$url = config.url) !== null && _config$url !== void 0 && _config$url.includes(HOST_URL))) config.url = HOST_URL + config.url;\n      dispatch({\n        type: \"LOADING\",\n        value: true\n      });\n      if (local === null) return config;\n      const token = JSON.parse(local).access_token;\n      if (token && config.headers !== undefined) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n    newInstance.interceptors.response.use(response => {\n      dispatch({\n        type: \"LOADING\",\n        value: false\n      });\n      return response;\n    }, async error => {\n      dispatch({\n        type: \"LOADING\",\n        value: false\n      });\n      const originalRequest = error.config;\n      if (error.response === undefined) return Promise.reject(error);\n      if (error.response.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        if (refreshPromise === null) {\n          const prom = refreshToken().then(res => {\n            refreshPromise = null;\n            return res;\n          });\n          refreshPromise = prom;\n          await prom;\n        } else {\n          await refreshPromise;\n        }\n        return newInstance(originalRequest);\n      }\n      return Promise.reject(error);\n    });\n    return newInstance;\n  }, [HOST_URL, refreshToken]);\n  const login = useCallback(async (username, password) => {\n    const loginUrl = HOST_URL + \"login\";\n    const loginResponse = await axios.post(loginUrl, {\n      email: username,\n      password: password\n    });\n    if (loginResponse.data.message === \"Login successful\") {\n      const url = HOST_URL + \"o/token/\";\n      const request = axios.post(url, new URLSearchParams({\n        username: username,\n        password: password,\n        grant_type: \"password\",\n        client_id: CLIENT_ID,\n        client_secret: CLIENT_SECRET\n      }), {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n      return new Promise((resolve, reject) => {\n        request.then(res => {\n          const token = JSON.stringify(res.data);\n          const expires_at = new Date();\n          expires_at.setHours(expires_at.getHours() + 1);\n          localStorage.setItem(TOKEN_LOCALSTORAGE_KEY, token);\n          navigate(\"/\", {\n            replace: true\n          });\n          resolve(res);\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    } else {\n      alert(\"Invalid Login details!\");\n    }\n  }, [CLIENT_ID, CLIENT_SECRET, HOST_URL, navigate]);\n  const createUser = useCallback(async (username, password, firstName, lastName, email) => {\n    const url = HOST_URL + \"register\";\n    const request = axios.post(url, {\n      user_name: username,\n      password: password,\n      first_name: firstName,\n      last_name: lastName,\n      email: email\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    await request;\n    await login(email, password);\n  }, [HOST_URL, login]);\n  const contextValue = useMemo(() => {\n    return {\n      ...state,\n      refreshToken,\n      login,\n      createUser,\n      getClient\n    };\n  }, [state, refreshToken, login, createUser, getClient]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"tqt9RzY70LTS54uRAF9Ch1fG4/o=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useCallback","useContext","useMemo","useReducer","useNavigate","AuthContext","reducer","initialAuthState","axios","TOKEN_LOCALSTORAGE_KEY","jsxDEV","_jsxDEV","refreshPromise","AuthProvider","opts","_s","children","HOST_URL","process","env","REACT_APP_API_HOST_URL","CLIENT_ID","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","state","dispatch","navigate","refreshToken","local","localStorage","getItem","Promise","resolve","reject","token","JSON","parse","url","request","post","URLSearchParams","refresh_token","grant_type","client_id","client_secret","headers","then","res","stringify","data","setItem","catch","err","replace","getClient","newInstance","create","interceptors","use","config","_config$url","includes","type","value","access_token","undefined","Authorization","response","error","originalRequest","status","_retry","prom","login","username","password","loginUrl","loginResponse","email","message","expires_at","Date","setHours","getHours","alert","createUser","firstName","lastName","user_name","first_name","last_name","contextValue","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/dkamau476/world_stories/src/authentication/auth-provider.tsx"],"sourcesContent":["import React, { useCallback, useContext, useMemo, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthContext, { AuthContextInterface } from \"./auth-context\";\nimport { reducer } from \"./reducer\";\nimport { initialAuthState, User } from \"./auth-state\";\nimport axios, { AxiosInstance, AxiosResponse } from \"axios\";\nimport {\n  TOKEN_LOCALSTORAGE_KEY,\n} from \"./auth\";\n\n\ninterface AuthProviderOptions {\n  children?: React.ReactNode;\n}\n\nlet refreshPromise: Promise<AxiosResponse<any, any>> | null = null;\n\nexport const AuthProvider = (opts: AuthProviderOptions): JSX.Element => {\n  const { children } = opts;\n  const HOST_URL = process.env.REACT_APP_API_HOST_URL || \"http://localhost:8000/\";\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID || \"xwYKg1b4eazi2OPlObUOzBvZaqoQ7z866Bcd2dVx\";\n  const CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET || \"fa8K70L2nPaiUFQo47xp9xJRwVbq8Pg1yqZXXCRHo5I3wLG0B95NBLIwzXzPtkkIOvDyz9hpF3Ip8ZA6YeDigOMMmzuS5VArLyGN6SOfBXaPmcaqPA0mrKh1d4lO7hIR\";\n\n  const [state, dispatch] = useReducer(reducer, initialAuthState);\n  const navigate = useNavigate();\n\n\n  const refreshToken = useCallback((): Promise<AxiosResponse<any>> => {\n    const local = localStorage.getItem(TOKEN_LOCALSTORAGE_KEY);\n    return new Promise<AxiosResponse<any>>((resolve, reject) => {\n      if (local === null) {\n        reject(\"already refreshing or localstorage token not found\");\n        return;\n      }\n      const token = JSON.parse(local);\n      const url = HOST_URL + \"o/token/\";\n      const request = axios.post(\n        url,\n        new URLSearchParams({\n          refresh_token: token.refresh_token,\n          grant_type: \"refresh_token\",\n          client_id: CLIENT_ID,\n          client_secret: CLIENT_SECRET,\n        }),\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n        }\n      );\n      request\n        .then((res) => {\n          const token = JSON.stringify(res.data);\n          localStorage.setItem(TOKEN_LOCALSTORAGE_KEY, token);\n          resolve(res);\n        })\n        .catch((err) => {\n          navigate(\"/login\", { replace: true });\n          reject(err);\n        });\n    });\n  }, [CLIENT_ID, CLIENT_SECRET, HOST_URL, navigate]);\n\n  const getClient = useCallback((): AxiosInstance => {\n    const newInstance = axios.create();\n    newInstance.interceptors.request.use((config) => {\n      const local = localStorage.getItem(TOKEN_LOCALSTORAGE_KEY);\n      if (!config.url?.includes(HOST_URL)) config.url = HOST_URL + config.url;\n      dispatch({ type: \"LOADING\", value: true });\n      if (local === null) return config;\n      const token = JSON.parse(local).access_token;\n      if (token && config.headers !== undefined) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n    newInstance.interceptors.response.use(\n      (response) => {\n        dispatch({ type: \"LOADING\", value: false });\n        return response;\n      },\n      async (error) => {\n        dispatch({ type: \"LOADING\", value: false });\n        const originalRequest = error.config;\n        if (error.response === undefined) return Promise.reject(error);\n        if (error.response.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true;\n          if (refreshPromise === null) {\n            const prom = refreshToken().then((res) => {\n              refreshPromise = null;\n              return res;\n            });\n            refreshPromise = prom;\n            await prom;\n          } else {\n            await refreshPromise;\n          }\n\n          return newInstance(originalRequest);\n        }\n        return Promise.reject(error);\n      }\n    );\n    return newInstance;\n  }, [HOST_URL, refreshToken]);\n\n  const login = useCallback(\n    async (username: string, password: string): Promise<AxiosResponse<any>> => {\n      const loginUrl = HOST_URL + \"login\";\n      const loginResponse = await axios.post(loginUrl, {email: username, password: password})\n      if (loginResponse.data.message === \"Login successful\") {\n        const url = HOST_URL + \"o/token/\";\n        const request = axios.post(\n          url,\n          new URLSearchParams({\n            username: username,\n            password: password,\n            grant_type: \"password\",\n            client_id: CLIENT_ID,\n            client_secret: CLIENT_SECRET,\n          }),\n          {\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n          }\n        );\n        return new Promise<AxiosResponse<any>>((resolve, reject) => {\n          request\n            .then((res) => {\n              const token = JSON.stringify(res.data);\n              const expires_at = new Date();\n              expires_at.setHours(expires_at.getHours() + 1)\n              localStorage.setItem(TOKEN_LOCALSTORAGE_KEY, token);\n              navigate(\"/\", { replace: true });\n              resolve(res);\n            })\n            .catch((err) => {\n              reject(err);\n            });\n        });\n      } else {\n        alert(\"Invalid Login details!\");\n      }\n    },\n    [CLIENT_ID, CLIENT_SECRET, HOST_URL, navigate]\n  );\n\n  const createUser = useCallback(\n    async (\n      username: string,\n      password: string,\n      firstName: string,\n      lastName: string,\n      email: string\n    ) => {\n      const url = HOST_URL + \"register\";\n      const request = axios.post(\n        url,\n        {\n          user_name: username,\n          password: password,\n          first_name: firstName,\n          last_name: lastName,\n          email: email\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      await request;\n      await login(email, password);\n    },\n    [HOST_URL, login]\n  );\n\n  const contextValue = useMemo(() => {\n    return {\n      ...state,\n      refreshToken,\n      login,\n      createUser,\n      getClient,\n    };\n  }, [state, refreshToken, login, createUser, getClient]);\n\n  return (\n    <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n  );\n};\n\nexport const useAuth = <\n  TUser extends User = User\n>(): AuthContextInterface<TUser> =>\n  useContext(AuthContext) as AuthContextInterface<TUser>;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}