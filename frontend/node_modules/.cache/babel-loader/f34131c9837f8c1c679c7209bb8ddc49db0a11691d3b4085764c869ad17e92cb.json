{"ast":null,"code":"var _jsxFileName = \"/home/dkamau476/stories_blog/src/authentication/auth-provider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useCallback, useContext, useMemo, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthContext from \"./auth-context\";\nimport { reducer } from \"./reducer\";\nimport { initialAuthState } from \"./auth-state\";\nimport axios from \"axios\";\nimport { TOKEN_LOCALSTORAGE_KEY, EXPIRES_AT } from \"./auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet refreshPromise = null;\nexport const AuthProvider = opts => {\n  _s();\n  const {\n    children\n  } = opts;\n  const HOST_URL = process.env.REACT_APP_API_HOST_URL || \"http://localhost:8000/\";\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID || \"xwYKg1b4eazi2OPlObUOzBvZaqoQ7z866Bcd2dVx\";\n  const CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET || \"fa8K70L2nPaiUFQo47xp9xJRwVbq8Pg1yqZXXCRHo5I3wLG0B95NBLIwzXzPtkkIOvDyz9hpF3Ip8ZA6YeDigOMMmzuS5VArLyGN6SOfBXaPmcaqPA0mrKh1d4lO7hIR\";\n  const [state, dispatch] = useReducer(reducer, initialAuthState);\n  const navigate = useNavigate();\n  const refreshToken = useCallback((username, password) => {\n    const local = localStorage.getItem(TOKEN_LOCALSTORAGE_KEY);\n    return new Promise((resolve, reject) => {\n      if (local === null) {\n        reject(\"already refreshing or localstorage token not found\");\n        return;\n      }\n      const token = JSON.parse(local);\n      const url = HOST_URL + \"o/token/\";\n      const request = axios.post(url, new URLSearchParams({\n        username: username,\n        password: password,\n        refresh_token: token.refresh_token,\n        grant_type: \"password\",\n        client_id: CLIENT_ID,\n        client_secret: CLIENT_SECRET\n      }), {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n      request.then(res => {\n        const token = JSON.stringify(res.data);\n        let expires_at = new Date();\n        expires_at.setHours(expires_at.getHours() + 1);\n        localStorage.setItem(TOKEN_LOCALSTORAGE_KEY, token);\n        expires_at = '' + expires_at.getTime();\n        localStorage.setItem(EXPIRES_AT, expires_at);\n        navigate(-1);\n        resolve(res);\n      }).catch(err => {\n        navigate(\"/login\", {\n          replace: true\n        });\n        reject(err);\n      });\n    });\n  }, [CLIENT_ID, CLIENT_SECRET, HOST_URL, navigate]);\n  const getClient = useCallback(() => {\n    const newInstance = axios.create();\n    newInstance.interceptors.request.use(config => {\n      var _config$url;\n      const local = localStorage.getItem(TOKEN_LOCALSTORAGE_KEY);\n      if (!((_config$url = config.url) !== null && _config$url !== void 0 && _config$url.includes(HOST_URL))) config.url = HOST_URL + config.url;\n      dispatch({\n        type: \"LOADING\",\n        value: true\n      });\n      if (local === null) return config;\n      const token = JSON.parse(local).access_token;\n      if (token && config.headers !== undefined) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n    newInstance.interceptors.response.use(response => {\n      dispatch({\n        type: \"LOADING\",\n        value: false\n      });\n      return response;\n    }, async error => {\n      dispatch({\n        type: \"LOADING\",\n        value: false\n      });\n      const originalRequest = error.config;\n      if (error.response === undefined) return Promise.reject(error);\n      if (error.response.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        if (refreshPromise === null) {\n          const prom = refreshToken().then(res => {\n            refreshPromise = null;\n            return res;\n          });\n          refreshPromise = prom;\n          await prom;\n        } else {\n          await refreshPromise;\n        }\n        return newInstance(originalRequest);\n      }\n      return Promise.reject(error);\n    });\n    return newInstance;\n  }, [HOST_URL, refreshToken]);\n  const login = useCallback(async (username, password) => {\n    const url = HOST_URL + \"o/token/\";\n    const request = axios.post(url, new URLSearchParams({\n      username: username,\n      password: password,\n      grant_type: \"password\",\n      client_id: CLIENT_ID,\n      client_secret: CLIENT_SECRET\n    }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    });\n    return new Promise((resolve, reject) => {\n      request.then(res => {\n        const token = JSON.stringify(res.data);\n        let expires_at = new Date();\n        expires_at.setHours(expires_at.getHours() + 1);\n        localStorage.setItem(TOKEN_LOCALSTORAGE_KEY, token);\n        expires_at = '' + expires_at.getTime();\n        localStorage.setItem(EXPIRES_AT, expires_at);\n        navigate(-1);\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }, [CLIENT_ID, CLIENT_SECRET, HOST_URL, navigate]);\n  const createUser = useCallback(async (username, password, firstName, lastName, email) => {\n    const url = HOST_URL + \"register\";\n    const request = await axios.post(url, {\n      user_name: username,\n      password: password,\n      first_name: firstName,\n      last_name: lastName,\n      email: email\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(request);\n    //await request;\n  }, [HOST_URL]);\n  const contextValue = useMemo(() => {\n    return {\n      ...state,\n      refreshToken,\n      login,\n      createUser,\n      getClient\n    };\n  }, [state, refreshToken, login, createUser, getClient]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"tqt9RzY70LTS54uRAF9Ch1fG4/o=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useCallback","useContext","useMemo","useReducer","useNavigate","AuthContext","reducer","initialAuthState","axios","TOKEN_LOCALSTORAGE_KEY","EXPIRES_AT","jsxDEV","_jsxDEV","refreshPromise","AuthProvider","opts","_s","children","HOST_URL","process","env","REACT_APP_API_HOST_URL","CLIENT_ID","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","state","dispatch","navigate","refreshToken","username","password","local","localStorage","getItem","Promise","resolve","reject","token","JSON","parse","url","request","post","URLSearchParams","refresh_token","grant_type","client_id","client_secret","headers","then","res","stringify","data","expires_at","Date","setHours","getHours","setItem","getTime","catch","err","replace","getClient","newInstance","create","interceptors","use","config","_config$url","includes","type","value","access_token","undefined","Authorization","response","error","originalRequest","status","_retry","prom","login","createUser","firstName","lastName","email","user_name","first_name","last_name","console","log","contextValue","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/dkamau476/stories_blog/src/authentication/auth-provider.tsx"],"sourcesContent":["import React, { useCallback, useContext, useMemo, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthContext, { AuthContextInterface } from \"./auth-context\";\nimport { reducer } from \"./reducer\";\nimport { initialAuthState, User } from \"./auth-state\";\nimport axios, { AxiosInstance, AxiosResponse } from \"axios\";\nimport {\n  TOKEN_LOCALSTORAGE_KEY,\n  EXPIRES_AT,\n} from \"./auth\";\n\n\ninterface AuthProviderOptions {\n  children?: React.ReactNode;\n}\n\nlet refreshPromise: Promise<AxiosResponse<any, any>> | null = null;\n\nexport const AuthProvider = (opts: AuthProviderOptions): JSX.Element => {\n  const { children } = opts;\n  const HOST_URL = process.env.REACT_APP_API_HOST_URL || \"http://localhost:8000/\";\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID || \"xwYKg1b4eazi2OPlObUOzBvZaqoQ7z866Bcd2dVx\";\n  const CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET || \"fa8K70L2nPaiUFQo47xp9xJRwVbq8Pg1yqZXXCRHo5I3wLG0B95NBLIwzXzPtkkIOvDyz9hpF3Ip8ZA6YeDigOMMmzuS5VArLyGN6SOfBXaPmcaqPA0mrKh1d4lO7hIR\";\n\n  const [state, dispatch] = useReducer(reducer, initialAuthState);\n  const navigate = useNavigate();\n\n\n  const refreshToken = useCallback((username: string, password: string): Promise<AxiosResponse<any>> => {\n    const local = localStorage.getItem(TOKEN_LOCALSTORAGE_KEY);\n    return new Promise<AxiosResponse<any>>((resolve, reject) => {\n      if (local === null) {\n        reject(\"already refreshing or localstorage token not found\");\n        return;\n      }\n      const token = JSON.parse(local);\n      const url = HOST_URL + \"o/token/\";\n      const request = axios.post(\n        url,\n        new URLSearchParams({\n          username: username,\n          password: password,\n          refresh_token: token.refresh_token,\n          grant_type: \"password\",\n          client_id: CLIENT_ID,\n          client_secret: CLIENT_SECRET,\n        }),\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n        }\n      );\n      request\n        .then((res) => {\n          const token = JSON.stringify(res.data);\n          let expires_at = new Date();\n          expires_at.setHours(expires_at.getHours() + 1)\n          localStorage.setItem(TOKEN_LOCALSTORAGE_KEY, token);\n          expires_at = '' + expires_at.getTime();\n          localStorage.setItem(EXPIRES_AT, expires_at);\n          navigate(-1);\n          resolve(res);\n        })\n        .catch((err) => {\n          navigate(\"/login\", { replace: true });\n          reject(err);\n        });\n    });\n  }, [CLIENT_ID, CLIENT_SECRET, HOST_URL, navigate]);\n\n  const getClient = useCallback((): AxiosInstance => {\n    const newInstance = axios.create();\n    newInstance.interceptors.request.use((config) => {\n      const local = localStorage.getItem(TOKEN_LOCALSTORAGE_KEY);\n      if (!config.url?.includes(HOST_URL)) config.url = HOST_URL + config.url;\n      dispatch({ type: \"LOADING\", value: true });\n      if (local === null) return config;\n      const token = JSON.parse(local).access_token;\n      if (token && config.headers !== undefined) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n    newInstance.interceptors.response.use(\n      (response) => {\n        dispatch({ type: \"LOADING\", value: false });\n        return response;\n      },\n      async (error) => {\n        dispatch({ type: \"LOADING\", value: false });\n        const originalRequest = error.config;\n        if (error.response === undefined) return Promise.reject(error);\n        if (error.response.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true;\n          if (refreshPromise === null) {\n            const prom = refreshToken().then((res) => {\n              refreshPromise = null;\n              return res;\n            });\n            refreshPromise = prom;\n            await prom;\n          } else {\n            await refreshPromise;\n          }\n\n          return newInstance(originalRequest);\n        }\n        return Promise.reject(error);\n      }\n    );\n    return newInstance;\n  }, [HOST_URL, refreshToken]);\n\n  const login = useCallback(\n    async (username: string, password: string): Promise<AxiosResponse<any>> => {\n        const url = HOST_URL + \"o/token/\";\n        const request = axios.post(\n          url,\n          new URLSearchParams({\n            username: username,\n            password: password,\n            grant_type: \"password\",\n            client_id: CLIENT_ID,\n            client_secret: CLIENT_SECRET,\n          }),\n          {\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n          }\n        );\n        return new Promise<AxiosResponse<any>>((resolve, reject) => {\n          request\n            .then((res) => {\n              const token = JSON.stringify(res.data);\n              let expires_at = new Date();\n              expires_at.setHours(expires_at.getHours() + 1)\n              localStorage.setItem(TOKEN_LOCALSTORAGE_KEY, token);\n              expires_at = '' + expires_at.getTime()\n              localStorage.setItem(EXPIRES_AT, expires_at);\n              navigate(-1);\n              resolve(res);\n            })\n            .catch((err) => {\n              reject(err);\n            });\n        });\n    },\n    [CLIENT_ID, CLIENT_SECRET, HOST_URL, navigate]\n  );\n\n  const createUser = useCallback(\n    async (\n      username: string,\n      password: string,\n      firstName: string,\n      lastName: string,\n      email: string\n    ) => {\n      const url = HOST_URL + \"register\";\n      const request = await axios.post(\n        url,\n        {\n          user_name: username,\n          password: password,\n          first_name: firstName,\n          last_name: lastName,\n          email: email\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      console.log(request);\n      //await request;\n    },\n    [HOST_URL]\n  );\n\n  const contextValue = useMemo(() => {\n    return {\n      ...state,\n      refreshToken,\n      login,\n      createUser,\n      getClient,\n    };\n  }, [state, refreshToken, login, createUser, getClient]);\n\n  return (\n    <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n  );\n};\n\nexport const useAuth = <\n  TUser extends User = User\n>(): AuthContextInterface<TUser> =>\n  useContext(AuthContext) as AuthContextInterface<TUser>;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}